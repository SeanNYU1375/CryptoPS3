#!/usr/bin/env python3
# Problem Set 3
# Sean Williams 
# 04-05-2022
import json
from math import gcd

from urllib3 import Retry

# Helper Functions
def return_e(p, q):
    eList = []
    # Using notation from RSA module from NetSec
    phi = (p-1)*(q-1)
    for e in range(2, phi):
    # Check for greatest common denominator/ highest common factor
    # If the result is one then i is prime
    # Break on first value (per assignment)
        if gcd(e, phi) == 1:
            eList.append(e)
    return eList


# Problem 1
def problem1(inDat):
    prob1_res = []
    # Loop through input list
    numList = inDat["nums"]
    for i in numList:
        # Check each number for primality
        if i > 1:
            # Only need to check for i/2+1
            # Flag to pass to prime number append
            flag = True
            for j in range(2, int(i/2)+1):
                # No remainder = not prime
                if(i % j) == 0:
                    prob1_res.append(False)
                    flag = False
                    break
            if(flag):   
                prob1_res.append(True)   
    dictOut["problem 1"] = prob1_res
    return

# Problem 2
def problem2(inDat):
    dictOut["problem 2"] = return_e(inDat["p"],inDat["q"])[0]
    return 

# Problem 3
def problem3(inDat):
    # use help for lowest e
    e = return_e(inDat["p"],inDat["q"])[0]
    phi = (inDat["p"]-1)*(inDat["q"]-1)
    dictOut["problem 3"] = pow(e, -1, phi)
    return

# Problem 4
def problem4(inDat):
    return 0

# Problem 5
def problem5(inDat):
    return 0


# read from stdin
assignmentIn = sys.stdin
inputJSON = json.load(assignmentIn)

dictOut = {
    "problem 1" : [],
    "problem 2" : "",
    "problem 3" : "",
    "problem 4" : "",
    "problem 5" : ""
}

# Problem Selection
for problemNum in inputJSON.keys():
    if(problemNum == "problem 1"): problem1(inputJSON[problemNum])
    elif(problemNum == "problem 2"): problem2(inputJSON[problemNum])
    elif(problemNum == "problem 3"): problem3(inputJSON[problemNum])
    elif(problemNum == "problem 4"): problem4(inputJSON[problemNum])
    elif(problemNum == "problem 5"): problem5(inputJSON[problemNum])
    else: exit()

json_submission = json.dumps(dictOut)
print(json_submission)